包括k近邻算法，k-means，分层聚类，以及在计算文本相似度时均需要计算两个数据点之间的距离（或相似度），因此合理使用距离函数是很多算法的关键。 欧几里得距离又叫做欧式距离，对于能够在实数轴上取值以及能够在平面或者多维空间中描绘出来的变量来说，它是一个不错的距离度量。 设x⃗ 和y⃗ 是两个n维实数向量，x⃗ =[x1,x2,x3,⋯,xn]T，y⃗ =[y1,y2,y3,⋯,yn]T，定义x⃗ 和y⃗ 的欧几里得距离为：
Distance(x⃗ ,y⃗ )=(x⃗ −y⃗ )T⋅(x⃗ −y⃗ )−−−−−−−−−−−−−−√=(x1−y1)2+(x2−y2)2+⋯+(xn−yn)2−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−√
## 预设变量

本题使用的数据变量名、含义及其类型如下：

变量名	含义	类型
x1	实数向量1	ndarray
x1	实数向量2	ndarray
答题要求
根据题目要求，给出计算结果dis，用于后台对本题正误进行判断。结果保留两位小数

代码：
import numpy as np
from math import sqrt

dis = None

print(x1)
print(x2)
x1 = np.array(x1)
x2 = np.array(x2)

dis = sqrt(np.sum((x1 - x2) * (x1 - x2)))
dis = round(dis, 2)
print(dis)
